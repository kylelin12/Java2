/*
 * Quicksort Algorithm : Assuming the data is random without many duplicates.
 * Let lower be the lower bound of a region within an array. (inclusive)
 * Let upper be the upper bound of a region within an array. (exclusive)
 **
 * 1. Pick a pivot. (Typically the value at the lower bound of the region.)
 * 2. Read data from left to right until a value that is greater than the pivot is found. 
 *    (Advance left)
 * 3. Read data from right to left until a value that is less than the pivor is found.
 *    (Advance right)
 * 4. If left < right then exchange the data at the positions left and right.
 *    Goto 2.
 * 5. If left >= right then exchange the data at the right and the pivotPosition(lower).
 *    (Placing the pivot).
 * 6. Recursively apply the algorithm to the regions [lower, pivotPosition)
 *    and [pivotPosition + 1, upper).
 */
 
 public class QuickSort {
 
 	public static void main(String[] args) {
 	
 	}
 }
